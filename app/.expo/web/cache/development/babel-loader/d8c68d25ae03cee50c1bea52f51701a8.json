{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vignesh/Desktop/Swachh/app/components/entryRecordCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Colors from \"../constants/colors\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nvar EntryCard = function EntryCard(_ref) {\n  var props = _ref.props;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var init = function init() {\n    return _regeneratorRuntime.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              console.log(\"wait\");\n            } catch (e) {\n              console.warn(e);\n            } finally {\n              setDataLoaded(true);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    init();\n  }, []);\n\n  if (!dataLoaded) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Loading....\"));\n  } else {\n    return React.createElement(TouchableOpacity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.cardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.textContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: props.image_link\n      },\n      style: {\n        width: wp(\"78%\"),\n        height: wp(\"39%\"),\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    })), React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, React.createElement(Ionicons, {\n      name: \"md-list-box\",\n      size: 12,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: styles.flatNo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"  \", props.grievance_type, \"  \")), React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, React.createElement(Entypo, {\n      name: \"location\",\n      size: 12,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: styles.flatNo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \" \", props.area, \"  \")), React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, React.createElement(SimpleLineIcons, {\n      name: \"clock\",\n      size: 11,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: styles.flatNo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \" \", props.assigned_date, \" \")))));\n  }\n};\n\nexport default EntryCard;\nvar styles = StyleSheet.create({\n  cardContainer: {\n    margin: wp(\"3%\"),\n    backgroundColor: \"white\",\n    elevation: 5,\n    padding: wp(\"4%\"),\n    borderRadius: wp(\"3%\"),\n    justifyContent: \"space-between\",\n    borderLeftWidth: 4,\n    borderColor: Colors.primaryColor\n  },\n  textContainer: {},\n  userName: {\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: 20,\n    paddingBottom: wp(\"0.8%\")\n  },\n  flatNo: {\n    fontFamily: \"Quicksand-SemiBold\"\n  },\n  row: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingBottom: wp(\"1%\")\n  }\n});","map":{"version":3,"sources":["/Users/vignesh/Desktop/Swachh/app/components/entryRecordCard.js"],"names":["React","useState","useEffect","Colors","SimpleLineIcons","Entypo","Feather","Ionicons","widthPercentageToDP","wp","heightPercentageToDP","hp","EntryCard","props","dataLoaded","setDataLoaded","init","console","log","e","warn","styles","cardContainer","textContainer","row","uri","image_link","width","height","borderRadius","flatNo","grievance_type","area","assigned_date","StyleSheet","create","margin","backgroundColor","elevation","padding","justifyContent","borderLeftWidth","borderColor","primaryColor","userName","fontFamily","fontSize","paddingBottom","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Colors from '../constants/colors';\nimport { StyleSheet, SafeAreaView, Text, View, Image, TextInput, StatusBar, TouchableOpacity } from 'react-native';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst EntryCard = ({ props }) => {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const init = async () => {\n        try {\n            // Keep on showing the SlashScreen\n            console.log(\"wait\");\n            // await fetchFonts();\n        } catch (e) {\n            console.warn(e);\n        } finally {\n            setDataLoaded(true);\n            // Hiding the SplashScreen\n\n        }\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n\n    if (!dataLoaded) {\n        return (\n            <View>\n\n                <Text>Loading....</Text>\n            </View>\n        );\n    } else {\n        return (\n\n            <TouchableOpacity>\n                <View style={styles.cardContainer}>\n                    <View style={styles.textContainer}>\n                        <View style={styles.row}>\n                            <Image source={{ uri: props.image_link }}\n                                style={{ width: wp(\"78%\"), height: wp(\"39%\"), borderRadius: 10 }} />\n                            {/* <Text style={styles.userName}> Abdul Ansari</Text> */}\n                        </View>\n                        <View style={styles.row}>\n                            <Ionicons name=\"md-list-box\" size={12} color=\"black\" />\n                            <Text style={styles.flatNo}>  {props.grievance_type}  </Text>\n\n                        </View>\n                        <View style={styles.row}>\n                            <Entypo name=\"location\" size={12} color=\"black\" />\n                            <Text style={styles.flatNo}> {props.area}  </Text>\n                        </View>\n                        <View style={styles.row}>\n                            <SimpleLineIcons name=\"clock\" size={11} color=\"black\" />\n                            <Text style={styles.flatNo}> {props.assigned_date} </Text>\n                        </View>\n\n                    </View>\n                </View>\n\n            </TouchableOpacity>\n\n        );\n    }\n}\n\nexport default EntryCard;\nconst styles = StyleSheet.create({\n    cardContainer: { margin: wp(\"3%\"), backgroundColor: \"white\", elevation: 5, padding: wp(\"4%\"), borderRadius: wp(\"3%\"), justifyContent: \"space-between\", borderLeftWidth: 4, borderColor: Colors.primaryColor },\n    textContainer: {},\n    userName: { fontFamily: \"Quicksand-Bold\", fontSize: 20, paddingBottom: wp(\"0.8%\") },\n    flatNo: { fontFamily: \"Quicksand-SemiBold\" },\n    row: { flexDirection: \"row\", alignItems: \"center\", paddingBottom: wp(\"1%\") }\n});"]},"metadata":{},"sourceType":"module"}