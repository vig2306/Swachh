{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vignesh/Desktop/Swachh/app/components/camerapage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Camera } from 'expo-camera';\nimport styles from \"../constants/styles\";\nimport Toolbar from \"../components/toolbar\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nexport default function CameraPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cameraRef = _useState4[0],\n      setCameraRef = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = useState(Camera.Constants.Type.back),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Camera, {\n    style: {\n      flex: 1\n    },\n    type: type,\n    ref: function ref(_ref2) {\n      setCameraRef(_ref2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'transparent',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, React.createElement(Toolbar, {\n    cameraRef: cameraRef,\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/vignesh/Desktop/Swachh/app/components/camerapage.js"],"names":["React","useState","useEffect","Camera","styles","Toolbar","Col","Row","Grid","CameraPage","navigation","hasPermission","setHasPermission","cameraRef","setCameraRef","Image","setImage","Constants","Type","back","type","setType","requestPermissionsAsync","status","flex","ref","backgroundColor","flexDirection"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,wBAA/B;AAIA,eAAe,SAASC,UAAT,OAAkC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAAA,kBACHT,QAAQ,CAAC,IAAD,CADL;AAAA;AAAA,MACtCU,aADsC;AAAA,MACvBC,gBADuB;;AAAA,mBAEXX,QAAQ,CAAC,IAAD,CAFG;AAAA;AAAA,MAEtCY,SAFsC;AAAA,MAE3BC,YAF2B;;AAAA,mBAGnBb,QAAQ,CAAC,IAAD,CAHW;AAAA;AAAA,MAGtCc,KAHsC;AAAA,MAG/BC,QAH+B;;AAAA,mBAKrBf,QAAQ,CAACE,MAAM,CAACc,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CALa;AAAA;AAAA,MAKtCC,IALsC;AAAA,MAKhCC,OALgC;;AAKiBnB,EAAAA,SAAS,CAAC,YAAM;AAC1E,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC4BC,MAAM,CAACmB,uBAAP,EAD5B;;AAAA;AAAA;AACWC,cAAAA,MADX,yBACWA,MADX;AAEGX,cAAAA,gBAAgB,CAACW,MAAM,KAAK,SAAZ,CAAhB;;AAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAIH,GALsE,EAKpE,EALoE,CAAT;;AAKtD,MAAIZ,aAAa,KAAK,IAAtB,EAA4B;AAChC,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AACzB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAAf;AAA4B,IAAA,IAAI,EAAEJ,IAAlC;AAAwC,IAAA,GAAG,EAAE,aAAAK,KAAG,EAAI;AAChDX,MAAAA,YAAY,CAACW,KAAD,CAAZ;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,IAAI,EAAE,CADH;AAEHE,MAAAA,eAAe,EAAE,aAFd;AAGHC,MAAAA,aAAa,EAAE;AAHZ,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEd,SAApB;AAA+B,IAAA,UAAU,EAAEH,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAHJ,CADJ,CADJ;AAgBH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, TouchableOpacity, TouchableWithoutFeedback } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport styles from '../constants/styles';\nimport Toolbar from '../components/toolbar';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\n\n\n\nexport default function CameraPage({navigation}) {\n    const [hasPermission, setHasPermission] = useState(null);\n    const [cameraRef, setCameraRef] = useState(null)\n    const [Image, setImage] = useState(null)\n    \n    const [type, setType] = useState(Camera.Constants.Type.back); useEffect(() => {\n        (async () => {\n            const { status } = await Camera.requestPermissionsAsync();\n            setHasPermission(status === 'granted');\n        })();\n    }, []); if (hasPermission === null) {\n        return <View />;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n    return (\n        <View style={{ flex: 1 }}>\n            <Camera style={{ flex: 1 }} type={type} ref={ref => {\n                setCameraRef(ref);\n            }}>\n                <View\n                    style={{\n                        flex: 1,\n                        backgroundColor: 'transparent',\n                        flexDirection: 'row',\n                    }}>\n                    <Toolbar cameraRef={cameraRef} navigation={navigation}/>\n                </View>\n            </Camera>\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}