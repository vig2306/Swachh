{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vignesh/Desktop/Swachh/app/components/settingCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Colors from \"../constants/colors\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nvar colors = ['white'];\n\nvar SettingCard = function SettingCard(_ref) {\n  var custom_values = _ref.custom_values,\n      handlePress = _ref.handlePress;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var init = function init() {\n    return _regeneratorRuntime.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              console.log(\"comment\");\n            } catch (e) {\n              console.warn(e);\n            } finally {\n              setDataLoaded(true);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    init();\n  }, []);\n\n  if (!dataLoaded) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Loading....\"));\n  } else {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return handlePress(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.cardContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        height: wp(\"12%\"),\n        width: wp(\"12%\"),\n        backgroundColor: \"#ecf0f1\",\n        borderRadius: 50,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginRight: wp(\"3%\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, custom_values.icon), React.createElement(Text, {\n      style: custom_values.main_text == \"Logout\" ? [styles.fontStyle, {\n        color: \"#e74c3c\"\n      }] : styles.fontStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, custom_values.main_text), React.createElement(View, {\n      style: {\n        alignItems: \"flex-end\",\n        marginLeft: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, custom_values.arrow ? React.createElement(AntDesign, {\n      name: \"right\",\n      size: 22,\n      color: \"#7f8c8d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 52\n      }\n    }) : null))));\n  }\n};\n\nexport default SettingCard;\nvar styles = StyleSheet.create({\n  card: {\n    borderRadius: 8,\n    marginHorizontal: wp(\"1.3%\")\n  },\n  cardContent: {\n    flexDirection: \"row\",\n    marginHorizontal: wp(\"1.8%\"),\n    marginVertical: hp(\"1%\"),\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icon_holder: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: hp(\"0.5%\")\n  },\n  background_color: {\n    borderRadius: 5,\n    marginRight: hp(\"1%\"),\n    height: hp(\"4%\"),\n    width: wp(\"8%\")\n  },\n  fontStyle: {\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: wp('4%')\n  }\n});","map":{"version":3,"sources":["/Users/vignesh/Desktop/Swachh/app/components/settingCard.js"],"names":["React","useState","useEffect","Colors","Font","AppLoading","AntDesign","MaterialIcons","MaterialCommunityIcons","Entypo","FontAwesome5","widthPercentageToDP","wp","heightPercentageToDP","hp","colors","SettingCard","custom_values","handlePress","dataLoaded","setDataLoaded","init","console","log","e","warn","styles","card","cardContent","height","width","backgroundColor","borderRadius","justifyContent","alignItems","marginRight","icon","main_text","fontStyle","color","marginLeft","arrow","StyleSheet","create","marginHorizontal","flexDirection","marginVertical","icon_holder","marginTop","background_color","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Colors from '../constants/colors';\nimport { StyleSheet, SafeAreaView, Text, View, Image, TextInput, StatusBar, TouchableOpacity } from 'react-native';\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport { Dimensions } from 'react-native'\nimport { AntDesign } from '@expo/vector-icons';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\n// const fetchFonts = () => {\n//     console.log(\"loading font\");\n//     return Font.loadAsync({\n//         \"Quicksand-regular\": require(\"../assets/fonts/Quicksand-Regular.ttf\"),\n//         \"Quicksand-medium\": require(\"../assets/fonts/Quicksand-Medium.ttf\"),\n//         \"Quicksand-Bold\": require(\"../assets/fonts/Quicksand-Bold.ttf\"),\n//         \"Quicksand-SemiBold\": require(\"../assets/fonts/Quicksand-SemiBold.ttf\"),\n//     });\n// };\nconst colors = ['white'];\nconst SettingCard = ({ custom_values, handlePress }) => {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const init = async () => {\n        try {\n            // Keep on showing the SlashScreen\n\n            // await fetchFonts();\n            console.log(\"comment\")\n        } catch (e) {\n            console.warn(e);\n        } finally {\n            setDataLoaded(true);\n            // Hiding the SplashScreen\n\n        }\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n\n    if (!dataLoaded) {\n        return (\n            <View>\n\n                <Text>Loading....</Text>\n            </View>\n        );\n    } else {\n        return (\n            <TouchableOpacity onPress={() => handlePress(true)}>\n                <View style={styles.card}>\n                    <View style={styles.cardContent}>\n                        <View style={{ height: wp(\"12%\"), width: wp(\"12%\"), backgroundColor: \"#ecf0f1\", borderRadius: 50, justifyContent: \"center\", alignItems: \"center\", marginRight: wp(\"3%\") }}>\n\n                            {custom_values.icon}\n                        </View>\n                        {/* <View style={[styles.background_color, {backgroundColor:custom_values.bg_color}]}>\n                            <View style={styles.icon_holder}>\n                                {custom_values.icon}\n                            </View>\n                        </View> */}\n                        <Text style={custom_values.main_text == \"Logout\" ? [styles.fontStyle, { color: \"#e74c3c\" }] : styles.fontStyle}>{custom_values.main_text}</Text>\n                        <View style={{ alignItems: \"flex-end\", marginLeft: \"auto\" }}>\n                            {custom_values.arrow ? <AntDesign name=\"right\" size={22} color=\"#7f8c8d\" /> : null}\n                        </View>\n                    </View>\n                </View>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default SettingCard;\nconst styles = StyleSheet.create({\n    card: {\n        borderRadius: 8,\n        marginHorizontal: wp(\"1.3%\"),\n    },\n    cardContent: {\n        flexDirection: \"row\",\n        marginHorizontal: wp(\"1.8%\"),\n        marginVertical: hp(\"1%\"),\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    icon_holder: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: hp(\"0.5%\")\n    },\n    background_color: {\n        borderRadius: 5,\n        marginRight: hp(\"1%\"),\n        height: hp(\"4%\"),\n        width: wp(\"8%\"),\n    },\n    fontStyle: {\n        fontFamily: \"Quicksand-Bold\",\n        fontSize: wp('4%')\n    }\n});"]},"metadata":{},"sourceType":"module"}