{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vignesh/Desktop/Swachh/app/screens/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Colors from \"../constants/colors\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Constants from \"../constants/text\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      onChangeemail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      onChangePassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rememberMe = _useState8[0],\n      setrememberMe = _useState8[1];\n\n  var handleClick = function handleClick() {\n    return setrememberMe(!rememberMe);\n  };\n\n  var login = function login() {\n    var data;\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            try {\n              data = {\n                \"user_email\": email,\n                \"user_password\": password\n              };\n              axios.post(Constants.ApiLink + \"/api/login\", data).then(function _callee(response) {\n                var jsonValue;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        jsonValue = JSON.stringify(response.data);\n                        _context.next = 4;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userData\", jsonValue));\n\n                      case 4:\n                        console.log(\"data: \" + jsonValue);\n                        _context.next = 10;\n                        break;\n\n                      case 7:\n                        _context.prev = 7;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.log(\"Got error while storing data to async\" + _context.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, [[0, 7]], Promise);\n              }).catch(function (error) {\n                console.log(\"ERROR ON HOME\", error);\n              }).finally(function () {});\n              navigation.navigate('Home');\n            } catch (e) {\n              console.warn(e);\n            } finally {\n              setDataLoaded(true);\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Splash = _useState10[0],\n      setSplash = _useState10[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/logo.png\"),\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: styles.tagline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Swachh\"), React.createElement(View, {\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.formInputs,\n    placeholder: \"Your email\",\n    placeholderTextColor: \"#95a5a6\",\n    onChangeText: function onChangeText(text) {\n      return onChangeemail(text);\n    },\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.formInputs,\n    placeholder: \"Your password\",\n    placeholderTextColor: \"#95a5a6\",\n    onChangeText: function onChangeText(text) {\n      return onChangePassword(text);\n    },\n    value: password,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.formButton,\n    onPress: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"black\",\n      padding: \"4%\",\n      borderRadius: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"arrow-right\",\n    size: 20,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: {\n      padding: \"4%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"Quicksand-Bold\",\n      fontSize: Dimensions.get('window').height / 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"  Log in\"))), React.createElement(View, {\n    style: styles.textButtonsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.labels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Don't have an account?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Sign up\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: '6%',\n    justifyContent: 'center'\n  },\n  logo: {\n    height: Dimensions.get('window').height / 4,\n    width: Dimensions.get('window').width / 1.6,\n    alignSelf: 'flex-start',\n    marginBottom: '8%'\n  },\n  tagline: {\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: Dimensions.get('window').width / 10\n  },\n  form: {\n    paddingTop: \"6%\"\n  },\n  formInputs: {\n    height: Dimensions.get('window').height / 14,\n    borderRadius: 10,\n    backgroundColor: \"#ecf0f1\",\n    fontFamily: \"Quicksand-SemiBold\",\n    paddingHorizontal: \"5%\",\n    marginVertical: \"2%\",\n    fontSize: Dimensions.get('window').height / 42,\n    color: \"#34495e\"\n  },\n  formButton: {\n    flexDirection: 'row',\n    alignContent: \"center\",\n    alignItems: \"center\",\n    marginVertical: \"4%\"\n  },\n  checkbox: {\n    alignSelf: \"center\",\n    borderRadius: 10\n  },\n  rememberMe: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: \"4%\"\n  },\n  rememberMeLabel: {\n    fontFamily: \"Quicksand-SemiBold\",\n    fontSize: Dimensions.get('window').height / 45\n  },\n  labels: {\n    fontFamily: \"Quicksand-SemiBold\",\n    fontSize: Dimensions.get('window').height / 44\n  },\n  textButtonsContainer: {\n    paddingRight: \"2%\",\n    justifyContent: \"flex-end\",\n    marginVertical: \"6%\",\n    paddingBottom: \"5%\"\n  },\n  textButton: {\n    color: Colors.primaryColor,\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: Dimensions.get('window').height / 42\n  }\n});","map":{"version":3,"sources":["/Users/vignesh/Desktop/Swachh/app/screens/Login.js"],"names":["React","useState","useEffect","Colors","FontAwesome5","axios","AsyncStorage","Constants","Login","navigation","dataLoaded","setDataLoaded","email","onChangeemail","password","onChangePassword","rememberMe","setrememberMe","handleClick","login","data","post","ApiLink","then","response","jsonValue","JSON","stringify","setItem","console","log","catch","error","finally","navigate","e","warn","Splash","setSplash","styles","container","flexDirection","require","logo","tagline","form","formInputs","text","formButton","backgroundColor","padding","borderRadius","fontFamily","fontSize","Dimensions","get","height","textButtonsContainer","labels","textButton","StyleSheet","create","flex","paddingHorizontal","justifyContent","width","alignSelf","marginBottom","paddingTop","marginVertical","color","alignContent","alignItems","checkbox","rememberMeLabel","paddingRight","paddingBottom","primaryColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Colors from '../constants/colors';\nimport { StyleSheet, Text, View, Image, TextInput, CheckBox, TouchableOpacity, StatusBar } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Constants from '../constants/text';\nexport default function Login({ navigation }) {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [email, onChangeemail] = useState('');\n    const [password, onChangePassword] = useState('');\n    const [rememberMe, setrememberMe] = useState(false);\n    const handleClick = () => setrememberMe(!rememberMe)\n\n\n\n\n    const login = async () => {\n        try {\n            const data={\n                \"user_email\": email,\n                \"user_password\": password\n            }\n            axios\n                .post(`${Constants.ApiLink}/api/login`, data)\n                .then(async function (response) {\n                    // handle success\n\n                    try {\n                        const jsonValue = JSON.stringify(response.data);\n                        await AsyncStorage.setItem(\"userData\", jsonValue);\n                        console.log(\"data: \" + jsonValue);\n                    } catch (e) {\n                        // saving error\n                        console.log(\"Got error while storing data to async\" + e);\n                    }\n                })\n                .catch(function (error) {\n                    // handle error\n                    console.log(\"ERROR ON HOME\", error);\n                })\n                .finally(function () {\n                    // always executed\n                });\n            navigation.navigate('Home')\n            // await fetchFonts();\n        } catch (e) {\n            console.warn(e);\n        } finally {\n            setDataLoaded(true);\n            // Hiding the SplashScreen\n\n        }\n    }\n\n    const [Splash, setSplash] = useState(true)\n\n    return (\n        <View style={styles.container}>\n            <View style={{ flexDirection: \"row\" }}>\n                <Image source={require('../assets/images/logo.png')} style={styles.logo} />\n            </View>\n            <Text style={styles.tagline}>Swachh</Text>\n            <View style={styles.form}>\n                <TextInput\n                    style={styles.formInputs}\n                    placeholder=\"Your email\"\n                    placeholderTextColor=\"#95a5a6\"\n                    onChangeText={text => onChangeemail(text)}\n                    value={email}\n                />\n                <TextInput\n                    style={styles.formInputs}\n                    placeholder=\"Your password\"\n                    placeholderTextColor=\"#95a5a6\"\n                    onChangeText={text => onChangePassword(text)}\n                    value={password}\n                    secureTextEntry={true}\n                />\n                <TouchableOpacity style={styles.formButton} onPress={login}>\n                    <View style={{ backgroundColor: \"black\", padding: \"4%\", borderRadius: 10 }}>\n                        <FontAwesome5 name=\"arrow-right\" size={20} color=\"white\" />\n                    </View>\n                    <View style={{ padding: \"4%\", }}>\n                        <Text style={{ fontFamily: \"Quicksand-Bold\", fontSize: Dimensions.get('window').height / 40 }}>  Log in</Text>\n                    </View>\n                </TouchableOpacity>\n\n                <View style={styles.textButtonsContainer}>\n                    <Text style={styles.labels}>Don't have an account?</Text>\n                    <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n                        <Text style={styles.textButton}>Sign up</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        paddingHorizontal: '6%',\n        justifyContent: 'center'\n    },\n    logo: {\n        height: Dimensions.get('window').height / 4,\n        width: Dimensions.get('window').width / 1.6,\n        alignSelf: 'flex-start',\n        marginBottom: '8%'\n    },\n    tagline: {\n        fontFamily: \"Quicksand-Bold\",\n        fontSize: Dimensions.get('window').width / 10,\n    },\n    form: {\n        paddingTop: \"6%\"\n    },\n    formInputs: {\n        height: Dimensions.get('window').height / 14,\n        borderRadius: 10,\n        backgroundColor: \"#ecf0f1\",\n        fontFamily: \"Quicksand-SemiBold\",\n        paddingHorizontal: \"5%\",\n        marginVertical: \"2%\",\n        fontSize: Dimensions.get('window').height / 42,\n        color: \"#34495e\"\n    },\n    formButton: {\n        flexDirection: 'row',\n        alignContent: \"center\",\n        alignItems: \"center\",\n        marginVertical: \"4%\"\n\n    },\n    checkbox: {\n        alignSelf: \"center\",\n        borderRadius: 10,\n\n    },\n    rememberMe: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginVertical: \"4%\",\n\n    },\n    rememberMeLabel: {\n        fontFamily: \"Quicksand-SemiBold\",\n        fontSize: Dimensions.get('window').height / 45,\n    },\n    labels: {\n        fontFamily: \"Quicksand-SemiBold\",\n        fontSize: Dimensions.get('window').height / 44,\n\n    },\n    textButtonsContainer: {\n        paddingRight: \"2%\",\n        justifyContent: \"flex-end\",\n        marginVertical: \"6%\",\n        paddingBottom: \"5%\"\n    },\n    textButton: {\n        color: Colors.primaryColor,\n        fontFamily: \"Quicksand-Bold\",\n        fontSize: Dimensions.get('window').height / 42,\n    }\n});"]},"metadata":{},"sourceType":"module"}