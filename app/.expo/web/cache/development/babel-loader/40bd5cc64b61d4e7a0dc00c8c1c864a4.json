{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContainerStyle = exports.generateBackgroundStyle = exports.fetchImage = exports.sumChars = exports.abbr = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _initials = _interopRequireDefault(require(\"initials\"));\n\nvar abbr = function abbr(name) {\n  var abbr = (0, _initials.default)(name);\n\n  if (name.startsWith('+')) {\n    abbr = \"+\".concat(abbr);\n  }\n\n  if (!abbr) {\n    console.warn('Could not get abbr from name');\n    abbr = name;\n  }\n\n  return abbr;\n};\n\nexports.abbr = abbr;\n\nvar sumChars = function sumChars(str) {\n  var sum = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum;\n};\n\nexports.sumChars = sumChars;\n\nvar fetchImage = function fetchImage(src) {\n  var fetchCall;\n  return _regenerator.default.async(function fetchImage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regenerator.default.awrap(fetch(src));\n\n        case 3:\n          fetchCall = _context.sent;\n\n          if (!fetchCall.headers.map['content-type'].startsWith('image/')) {\n            _context.next = 8;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 8:\n          console.warn('Online fetched source is not a supported image');\n          return _context.abrupt(\"return\", false);\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.warn('Error fetching source, falling back to initials', _context.t0);\n          return _context.abrupt(\"return\", false);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};\n\nexports.fetchImage = fetchImage;\n\nvar generateBackgroundStyle = function generateBackgroundStyle(name, bgColor, bgColors) {\n  var background;\n\n  if (bgColor) {\n    background = bgColor;\n  } else {\n    var i = sumChars(name) % bgColors.length;\n    background = bgColors[i];\n  }\n\n  return {\n    backgroundColor: background\n  };\n};\n\nexports.generateBackgroundStyle = generateBackgroundStyle;\n\nvar getContainerStyle = function getContainerStyle(size, src, borderRadius) {\n  return {\n    borderRadius: borderRadius ? borderRadius : size * 0.5,\n    borderWidth: src ? 0 : 1,\n    borderColor: 'transparent',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n};\n\nexports.getContainerStyle = getContainerStyle;","map":{"version":3,"sources":["helpers.js"],"names":["abbr","name","console","sumChars","sum","i","str","fetchImage","fetchCall","fetch","generateBackgroundStyle","background","bgColors","backgroundColor","getContainerStyle","borderRadius","size","borderWidth","src","borderColor","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import initials from 'initials';\n\nexport const abbr = (name) => {\n  let abbr = initials(name);\n  if (name.startsWith('+')) {\n    abbr = `+${ abbr }`;\n  }\n  if (!abbr) {\n    console.warn('Could not get abbr from name');\n    abbr = name;\n  }\n  return abbr;\n};\n\nexport const sumChars = (str) => {\n  let sum = 0;\n  for (let i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum;\n};\n\nexport const fetchImage = async (src) => {\n  try {\n    const fetchCall = await fetch(src);\n    if (fetchCall.headers.map['content-type'].startsWith('image/')) {\n      return true;\n    } else {\n      console.warn('Online fetched source is not a supported image');\n      return false;\n    }\n  } catch (err) {\n    console.warn('Error fetching source, falling back to initials', err);\n    return false;\n  }\n};\n\nexport const generateBackgroundStyle = (name, bgColor, bgColors) => {\n  let background;\n  if (bgColor) {\n    background = bgColor;\n  } else {\n    // Pick a deterministic color from the list\n    const i = sumChars(name) % bgColors.length;\n    background = bgColors[i];\n  }\n  return {backgroundColor: background};\n};\n\nexport const getContainerStyle = (size, src, borderRadius) => {\n  return {\n    borderRadius: borderRadius ? borderRadius : (size * 0.5),\n    borderWidth: src ? 0 : 1,\n    borderColor: 'transparent',\n    justifyContent: 'center',\n    alignItems: 'center',\n  };\n};\n"]},"metadata":{},"sourceType":"script"}